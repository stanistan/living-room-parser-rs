pub fact_or_pattern -> Terms = ts:term* {
    Terms(ts)
}

ws -> Term
    = " "+ { Term::Whitespace }

null -> Term
    = "null" { Term::Null }

boolean -> Term
    = "true" { Term::Bool(true) }
    / "false" { Term::Bool(false) }

int -> Term
    = "0" { Term::Int(0) }
    / s:$([-+]?[1-9]digit*) { Term::Int(isize::from_str(s).unwrap()) }

value -> Term
    = int / null / boolean

digit = [0-9]
character = [a-zA-Z]
alnum = digit / character

word -> Term
    = w:$(alnum+) { Term::Word(w.to_owned()) }

hole -> Term
    = "_" { Term::Hole }

id -> Term
    = "#" w:$(alnum+) { Term::Id(w.to_owned()) }

variable -> Term
    = "$" w:$(alnum+) { Term::Variable(w.to_owned()) }

wildcard -> Term
    = "$" { Term::Wildcard }

term -> Term
    = value / hole / id / variable / wildcard / ws / word
